{"version":3,"sources":["hooks/useQueryParam.ts","constants/index.ts","service/api.ts","components/Layout/HeaderGithubIcon.tsx","components/Layout/Header.tsx","components/Layout/Main.tsx","components/RepositoryList/LanguageIcon.tsx","components/RepositoryList/RepositoryCard.tsx","components/RepositoryList/RepositoryList.tsx","components/EmptyState/EmptyState.tsx","components/SearchBar/SearchBar.tsx","components/Skeleton/Skeleton.tsx","components/RevalidateButton/RevalidateButton.tsx","pages/Home.tsx","hooks/useGithubRepositoryFetcher.tsx","hooks/useSyncRouteQuery.ts","components/GlobalStyle/GlobalStyle.ts","components/GlobalStyle/ThemeStyle.ts","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["useQueryParam","key","useSearchParams","searchParams","setSearchParams","get","undefined","useCallback","newValue","options","newSearchParams","URLSearchParams","set","GITHUB_SEARCH_REPOSITORY_URL","fetchGithubSearchRepositories","page","searchValue","a","fetch","response","ok","status","Error","json","data","Svg","styled","svg","props","theme","colorDark20","colorPrimary100","HeaderGithubIcon","useTheme","target","href","rel","viewBox","d","fill","style","transformOrigin","className","HeaderWrapper","div","colorDark50","StyleHeader","header","Header","children","Main","CircleSpan","span","LanguageIcon","language","colors","color","backgroundColor","marginRight","numberFormatter","Intl","NumberFormat","notation","Card","CardTitle","colorBlue50","CardDescription","colorPrimary50","CardTopicTag","CardDetail","p","CardDetailItem","RepositoryCard","repository","html_url","full_name","marginLeft","cursor","description","topics","map","tag","format","stargazers_count","license","name","RepositoryList","repositories","onLoadMore","ref","useInViewEffect","isIntersecting","rootMargin","threshold","id","EmptyStateWrapper","EmptyState","fontSize","SearchBarWrapper","label","SearchInput","input","colorDark100","colorBlue20","SearchBar","value","onChange","placeholder","Skeleton","foregroundColor","speed","height","x","y","rx","ry","width","Skeletons","Button","button","RevalidateButton","error","isRefreshing","onClick","timerRef","useRef","useState","timer","setTimer","useEffect","current","clearInterval","disabled","event","window","setInterval","prev","message","Home","query","persistQueryValue","setValue","useDebounce","useSWRInfinite","index","originalData","originalError","size","setSize","isValidating","mutate","length","isLoadingMore","lastItems","items","isEmpty","reduce","acc","curr","loadMore","revalidate","useGithubRepositoryFetcher","setQuery","useSyncRouteQuery","fontWeight","GlobalStyle","createGlobalStyle","normalize","darkTheme","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2718b7d8.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nimport { useSearchParams } from \"react-router-dom\";\nimport type { NavigateOptions } from \"react-router-dom\";\n\nconst useQueryParam = (\n  key: string\n): [string | undefined, (newQuery: any, options?: NavigateOptions) => void] => {\n  let [searchParams, setSearchParams] = useSearchParams();\n  let paramValue = searchParams.get(key) || undefined;\n\n  let setValue = useCallback(\n    (newValue, options?: NavigateOptions) => {\n      let newSearchParams = new URLSearchParams(searchParams);\n      newSearchParams.set(key, newValue);\n      setSearchParams(newSearchParams, options);\n    },\n    [key, searchParams, setSearchParams]\n  );\n\n  return [paramValue, setValue];\n};\n\nexport { useQueryParam };\n","export const PER_PAGE = 10;\n\nexport const GITHUB_SEARCH_REPOSITORY_URL = `https://api.github.com/search/repositories?per_page=${PER_PAGE}`;\n","import { GITHUB_SEARCH_REPOSITORY_URL } from \"../constants\";\n\nexport type Repository = {\n  id: number;\n  name: string;\n  full_name: string;\n  html_url: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  stargazers_count: number;\n  language: null | string;\n  license: null | {\n    name: string;\n  };\n  forks: number;\n};\n\nexport type Data = {\n  items: Repository[];\n  total_count: number;\n};\n\nconst fetchGithubSearchRepositories = async (\n  page: number,\n  searchValue: string\n) => {\n  const response = await fetch(\n    `${GITHUB_SEARCH_REPOSITORY_URL}&page=${page}&q=${searchValue}`\n  );\n\n  if (!response.ok) {\n    if (response.status === 403) {\n      throw new Error(\"API rate limit exceeded\");\n    }\n\n    throw new Error(\"An error occurred while fetching the data\");\n  }\n\n  const data = await response.json();\n\n  return data;\n};\n\nexport { fetchGithubSearchRepositories };\n","import { FC } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst href = \"https://github.com/milletbard/github-repo-searcher\";\n\nconst Svg = styled.svg`\n  width: 58px;\n  height: 58px;\n  fill: ${(props) => props.theme.colorDark20};\n  color: ${(props) => props.theme.colorPrimary100};\n  position: absolute;\n  top: 0;\n  border: 0;\n  right: 0;\n`;\n\nconst HeaderGithubIcon: FC = () => {\n  const theme = useTheme();\n\n  return (\n    <a\n      target=\"_blank\"\n      href={href}\n      aria-label=\"View source on GitHub\"\n      rel=\"noreferrer\"\n    >\n      <Svg theme={theme} viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          style={{ transformOrigin: \"130px 106px\" }}\n          className=\"octo-arm\"\n        />\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        />\n      </Svg>\n    </a>\n  );\n};\n\nexport { HeaderGithubIcon };\n","import { FC } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { IThemeType } from \"components/GlobalStyle\";\n\nimport { HeaderGithubIcon } from \"./HeaderGithubIcon\";\n\nconst HeaderWrapper = styled.div`\n  background-color: ${(props) => props.theme.colorDark50};\n  color: ${(props) => props.theme.colorPrimary100};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.5;\n  padding: 16px;\n`;\n\nconst StyleHeader = styled.header`\n  width: 100%;\n  max-width: 768px;\n`;\n\ninterface IHeaderProps {\n  children: React.ReactNode;\n}\n\nconst Header: FC<IHeaderProps> = ({ children }) => {\n  const theme: IThemeType = useTheme();\n\n  return (\n    <HeaderWrapper theme={theme}>\n      <StyleHeader>{children}</StyleHeader>\n\n      <HeaderGithubIcon />\n    </HeaderWrapper>\n  );\n};\n\nexport { Header };\n","import styled from \"styled-components\";\n\nconst Main = styled.div`\n  max-width: 768px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n\nexport { Main };\n","import { FC } from \"react\";\nimport colors from \"github-colors\";\nimport { IThemeType } from \"components/GlobalStyle\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst CircleSpan = styled.span`\n  top: 1px;\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border: 1px solid gray;\n  border-radius: 50%;\n  background-color: #f1e05a;\n`;\n\ninterface ILanguageIconProps {\n  language: string;\n}\n\nconst LanguageIcon: FC<ILanguageIconProps> = ({ language }) => {\n  const theme: IThemeType = useTheme();\n  const { color = theme.colorDark20 } = colors.get(language) ?? {};\n\n  return <CircleSpan style={{ backgroundColor: color, marginRight: \"4px\" }} />;\n};\n\nexport { LanguageIcon };\n","import { FC } from \"react\";\n\nimport styled, { useTheme } from \"styled-components\";\nimport { GoStar, GoLinkExternal } from \"react-icons/go\";\nimport { Repository } from \"types\";\n\nimport { IThemeType } from \"components/GlobalStyle\";\nimport { LanguageIcon } from \"./LanguageIcon\";\n\nconst numberFormatter = new Intl.NumberFormat(\"en\", { notation: \"compact\" });\n\nconst Card = styled.div`\n  background-color: ${(props) => props.theme.colorDark50};\n  border-color: ${(props) => props.theme.colorDark20};\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 6px;\n  padding: 16px;\n  margin-top: 8px;\n  min-height: 108px;\n`;\n\nconst CardTitle = styled.a`\n  color: ${(props) => props.theme.colorBlue50};\n  font-weight: 600;\n  line-height: 1.25;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst CardDescription = styled.div`\n  color: ${(props) => props.theme.colorPrimary50};\n  margin-top: 4px;\n`;\n\nconst CardTopicTag = styled.a`\n  white-space: nowrap;\n  display: inline-block;\n  padding: 0 8px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22x;\n  margin: 4px 2px 4px 2px;\n  border-radius: 2em;\n  line-height: 22px;\n  color: ${(props) => props.theme.colorBlue50};\n  background-color: rgba(56, 139, 253, 0.15);\n\n  &:hover {\n    color: ${(props) => props.theme.colorPrimary100};\n    background-color: rgba(56, 139, 253, 1);\n  }\n`;\n\nconst CardDetail = styled.p`\n  color: ${(props) => props.theme.colorPrimary50};\n  display: flex;\n  align-item: center;\n  font-size: 12px;\n  margin-top: 8px;\n  margin-bottom: 0;\n`;\n\nconst CardDetailItem = styled.span`\n  color: ${(props) => props.theme.colorPrimary50};\n  display: inline-flex;\n  font-size: 12px;\n  align-items: center;\n  margin-right: 16px;\n`;\n\ninterface RepositoryCardProps {\n  repository: Repository;\n}\n\nconst RepositoryCard: FC<RepositoryCardProps> = ({ repository }) => {\n  const theme: IThemeType = useTheme();\n\n  return (\n    <Card theme={theme}>\n      <div>\n        <CardTitle href={repository.html_url} target=\"_blank\">\n          {repository.full_name}\n          <GoLinkExternal style={{ marginLeft: \"4px\", cursor: \"pointer\" }} />\n        </CardTitle>\n\n        <CardDescription theme={theme}>\n          {repository.description}\n        </CardDescription>\n\n        <CardDescription theme={theme}>\n          {repository.topics.map((tag) => (\n            <CardTopicTag key={tag} theme={theme}>\n              {tag}\n            </CardTopicTag>\n          ))}\n        </CardDescription>\n\n        <CardDetail theme={theme}>\n          <CardDetailItem>\n            <GoStar style={{ marginRight: \"4px\" }} />\n\n            {numberFormatter.format(repository.stargazers_count)}\n          </CardDetailItem>\n\n          <CardDetailItem>\n            <LanguageIcon language={repository.language} />\n            {repository.language}\n          </CardDetailItem>\n\n          {repository.license?.name && (\n            <CardDetailItem> {repository.license.name}</CardDetailItem>\n          )}\n        </CardDetail>\n      </div>\n    </Card>\n  );\n};\n\nexport { RepositoryCard, Card };\n","import { FC } from \"react\";\nimport { Repository } from \"types\";\nimport { useInViewEffect } from \"react-hook-inview\";\n\nimport { RepositoryCard } from \"./RepositoryCard\";\n\ninterface RepositoryListProps {\n  repositories: Repository[];\n  onLoadMore: () => void;\n}\n\nconst RepositoryList: FC<RepositoryListProps> = ({\n  repositories,\n  onLoadMore,\n}) => {\n  const ref = useInViewEffect(\n    ([entry]) => {\n      if (entry.isIntersecting) {\n        onLoadMore();\n      }\n    },\n    { rootMargin: \"10%\", threshold: 0 }\n  );\n\n  return (\n    <div>\n      {repositories.map((repository) => (\n        <RepositoryCard key={repository.id} repository={repository} />\n      ))}\n\n      <div ref={ref} />\n    </div>\n  );\n};\n\nexport { RepositoryList };\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { GoSearch } from \"react-icons/go\";\n\nconst EmptyStateWrapper = styled.div`\n  padding: 32px;\n  text-align: center;\n`;\n\ninterface EmptyStateProps {\n  searchValue: string;\n}\n\nconst EmptyState: FC<EmptyStateProps> = ({ searchValue }) => (\n  <EmptyStateWrapper>\n    <GoSearch style={{ fontSize: \"36px\" }} />\n    <h3>We couldn’t find any repositories matching '{searchValue}'</h3>\n  </EmptyStateWrapper>\n);\n\nexport { EmptyState };\n","import { FC } from \"react\";\nimport { IThemeType } from \"components/GlobalStyle\";\n\nimport styled, { useTheme } from \"styled-components\";\n\nconst SearchBarWrapper = styled.label`\n  display: flex;\n  min-height: 28px;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  background-color: ${(props) => props.theme.colorDark100};\n  color: inherit;\n  font-size: inherit;\n  border: 1px solid;\n  border-color: ${(props) => props.theme.colorDark20};\n  box-shadow: none;\n  border-radius: 6px;\n  outline: none;\n  padding: 5px 12px;\n\n  &:focus {\n    border-color: ${(props) => props.theme.colorBlue20};\n  }\n`;\n\ninterface SearchBarProps {\n  value: string;\n  onChange: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\n\nconst SearchBar: FC<SearchBarProps> = ({ value, onChange }) => {\n  const theme: IThemeType = useTheme();\n\n  return (\n    <SearchBarWrapper>\n      <SearchInput\n        value={value}\n        onChange={onChange}\n        theme={theme}\n        placeholder=\"Find a repository...\"\n      ></SearchInput>\n    </SearchBarWrapper>\n  );\n};\n\nexport { SearchBar };\n","import { FC } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport ContentLoader from \"react-content-loader\";\nimport { IThemeType } from \"components/GlobalStyle\";\nimport { Card } from \"components/RepositoryList\";\n\nconst Skeleton: FC = () => {\n  const theme: IThemeType = useTheme();\n\n  return (\n    <Card theme={theme}>\n      <ContentLoader\n        backgroundColor={theme.colorDark50}\n        foregroundColor={theme.colorDark20}\n        speed={2}\n        height={80}\n      >\n        <rect x=\"0\" y=\"16\" rx=\"3\" ry=\"3\" width=\"160\" height=\"8\" />\n        <rect x=\"0\" y=\"32\" rx=\"3\" ry=\"3\" width=\"180\" height=\"8\" />\n        <rect x=\"0\" y=\"48\" rx=\"3\" ry=\"3\" width=\"380\" height=\"8\" />\n        <rect x=\"0\" y=\"64\" rx=\"3\" ry=\"3\" width=\"420\" height=\"8\" />\n      </ContentLoader>\n    </Card>\n  );\n};\n\nconst Skeletons: FC = () => {\n  return (\n    <>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </>\n  );\n};\nexport { Skeletons };\n","import { FC, MouseEventHandler, useState, useRef, useEffect } from \"react\";\n\nimport styled, { useTheme } from \"styled-components\";\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 12px;\n  margin-top: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colorPrimary50};\n  background: ${(props) => props.theme.colorDark50};\n  border: 1px solid ${(props) => props.theme.colorDark20};\n  border-radius: 6px;\n  cursor: pointer;\n\n  &:hover {\n    background: ${(props) => props.theme.colorDark20};\n  }\n`;\n\ninterface RevalidateButtonProps {\n  error: Error;\n  isRefreshing: boolean;\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}\n\nconst RevalidateButton: FC<RevalidateButtonProps> = ({\n  error,\n  isRefreshing,\n  onClick,\n}) => {\n  const theme = useTheme();\n  const timerRef = useRef<number | null>();\n  const [timer, setTimer] = useState(0);\n\n  const startTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    setTimer(5);\n\n    timerRef.current = window.setInterval(() => {\n      setTimer((prev) => (prev === 0 ? 0 : prev - 1));\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (timerRef.current && timer === 0) {\n      clearInterval(timerRef.current);\n    }\n  }, [timer]);\n\n  return (\n    <Button\n      disabled={timer !== 0}\n      theme={theme}\n      onClick={(event) => {\n        startTimer();\n        onClick(event);\n      }}\n    >\n      {error.message},{\" \"}\n      {timer === 0 && !isRefreshing\n        ? `click here to try again.`\n        : `click here after ${timer} seconds.`}\n    </Button>\n  );\n};\n\nexport { RevalidateButton };\n","import { FC, useState } from \"react\";\nimport { useDebounce } from \"use-debounce\";\nimport {\n  useSyncRouteQuery,\n  useQueryParam,\n  useGithubRepositoryFetcher,\n} from \"hooks\";\n\nimport { Header, Main } from \"components/Layout\";\nimport { RepositoryList } from \"components/RepositoryList\";\nimport { EmptyState } from \"components/EmptyState\";\nimport { SearchBar } from \"components/SearchBar\";\nimport { Skeletons } from \"components/Skeleton\";\nimport { RevalidateButton } from \"components/RevalidateButton\";\n\nconst Home: FC = () => {\n  const [query] = useQueryParam(\"q\");\n  const [persistQueryValue] = useState(query);\n\n  const [value, setValue] = useState(persistQueryValue ?? \"\");\n  const [searchValue] = useDebounce(value, 500);\n\n  const {\n    repositories,\n    error,\n    isLoadingMore,\n    isEmpty,\n    isRefreshing,\n    loadMore,\n    revalidate,\n  } = useGithubRepositoryFetcher(searchValue);\n\n  useSyncRouteQuery(searchValue);\n\n  const handleInputChange: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setValue(event.target.value);\n  };\n\n  const handleLoadMore = () => {\n    loadMore();\n  };\n\n  return (\n    <>\n      <Header>\n        <SearchBar value={value} onChange={handleInputChange} />\n      </Header>\n\n      <Main>\n        <h2 style={{ fontWeight: \"400\", fontSize: \"16px\" }}>\n          Repository Searcher\n        </h2>\n\n        {repositories.length !== 0 && (\n          <RepositoryList\n            repositories={repositories}\n            onLoadMore={handleLoadMore}\n          />\n        )}\n\n        {isEmpty && searchValue && !isLoadingMore && !error && (\n          <EmptyState searchValue={searchValue} />\n        )}\n\n        {isLoadingMore && searchValue && !error && <Skeletons />}\n\n        {error && (\n          <RevalidateButton\n            error={error}\n            isRefreshing={isRefreshing}\n            onClick={revalidate}\n          />\n        )}\n      </Main>\n    </>\n  );\n};\n\nexport { Home };\n","import useSWRInfinite from \"swr/infinite\";\nimport { PER_PAGE } from \"../constants\";\nimport { Repository, Data } from \"types\";\n\nimport { fetchGithubSearchRepositories } from \"service/api\";\n\nconst useGithubRepositoryFetcher = (searchValue: string) => {\n  const {\n    data: originalData,\n    error: originalError,\n    size,\n    setSize,\n    isValidating,\n    mutate,\n  } = useSWRInfinite<Data>((index) => {\n    if (!searchValue) {\n      return null;\n    }\n\n    return [index + 1, searchValue];\n  }, fetchGithubSearchRepositories);\n\n  const error = originalError;\n\n  const data: Data[] = originalData?.length ? originalData : [];\n\n  const isLoadingMore =\n    size > 0 && data && typeof data[size - 1] === \"undefined\";\n\n  const lastItems: Repository[] = data[data.length - 1]?.items ?? [];\n\n  const isEmpty = data[0]?.items?.length === 0;\n\n  const isRefreshing =\n    isValidating && lastItems && lastItems.length === PER_PAGE;\n\n  // reduce the data items\n  const repositories =\n    data?.reduce<Repository[]>(\n      (acc, curr) => (\"items\" in curr ? [...acc, ...curr.items] : acc),\n      []\n    ) ?? [];\n\n  const loadMore = () => {\n    setSize((prev) => prev + 1);\n  };\n\n  const revalidate = () => mutate();\n\n  return {\n    repositories,\n    error,\n    isLoadingMore,\n    isEmpty,\n    isRefreshing,\n    loadMore,\n    revalidate,\n  };\n};\n\nexport { useGithubRepositoryFetcher };\n","import { useEffect } from \"react\";\nimport { useQueryParam } from \"hooks\";\n\nconst useSyncRouteQuery = (value: string): void => {\n  const [query, setQuery] = useQueryParam(\"q\");\n\n  useEffect(() => {\n    if (query === undefined && value === \"\") {\n      return;\n    }\n\n    if (query !== value) {\n      setQuery(value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, query]);\n};\n\nexport { useSyncRouteQuery };\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  body,html {\n    background-color: ${(props) => props.theme.colorDark100};\n    color: ${(props) => props.theme.colorPrimary100};\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\";\n    font-size: 14px;\n    line-height: 1.5;\n    min-height: 100%;\n    height: 100%;\n    margin: 0;\n    line-height: 1.65;\n    min-width: 320px;\n    \n  }\n\n  * {\n  box-sizing: border-box;\n  }\n`;\n\nexport { GlobalStyle };\n","declare module \"styled-components\" {\n  export interface DefaultTheme extends IThemeType {}\n}\n\nexport const darkTheme = {\n  colorDark100: \"#0d1117\",\n  colorDark50: \"#161b22\",\n  colorDark20: \"#21262C\",\n  colorPrimary100: \"#c9d1d9\",\n  colorPrimary50: \"#8b949e\",\n  colorBlue50: \"#58a6ff\",\n  colorBlue20: \"#1f6feb\",\n};\n\nexport type IThemeType = typeof darkTheme;\n","import { FC } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport { ThemeProvider, ThemeConsumer } from \"styled-components\";\nimport { Home } from \"../pages\";\nimport { GlobalStyle, darkTheme } from \"components/GlobalStyle\";\n\nconst App: FC = () => {\n  return (\n    <>\n      <ThemeProvider theme={darkTheme}>\n        <ThemeConsumer>\n          {(theme) => <GlobalStyle theme={theme} />}\n        </ThemeConsumer>\n\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n        </Router>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}